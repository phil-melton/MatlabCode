% First order ODEs
%% y'=y+x y(0)=0
clc; clear all; close all;
%yn+1=yn+hf(xn,yn)
% h=.2;
% x0=0;
% y0=0;
% y1=y0+h*f(x0,y0);
% x1=h+x0;
% y2=y1+h*f(x1,y1);
% x2=h+x1;
%this is bad way to do it
%% Function
clear all; close all; clc
f(0,0,.2,100)
function [x,y]=f(x0,y0,h,N)
x(1)=x0+h;
y(1)=y0+h*(x0+y0);
for i=1:N-1
    x(i+1)=x(i)+h;
    k(i)=h*(x(i)+y(i));
    k(i+1)=h*(x(i+1)+y(i)+k(i));
    y(i+1)=y(i)+.5*(k(i)+k(i+1));
end
    hold on;
    createFit(x, y)
end
function [fitresult, gof] = createFit(x, y)
% used curvefitter to get this function
%CREATEFIT(X,Y)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input: x
%      Y Output: y
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 06-Apr-2023 12:59:45


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( x, y );

% Set up fittype and options.
ft = fittype( 'exp1' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.978563715984495 0.994523509258981];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
legend( h, 'y vs. x', 'Exponential fit', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'x', 'Interpreter', 'none' );
ylabel( 'y', 'Interpreter', 'none' );
grid on
end
